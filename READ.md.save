# Kubernetes Up and Running

## Common `kubectl` commands

### Context
*How to set the context and use it?*
To set the context, use below command
```
kubectl config set-context my-context --namespace=mystuff
```
And use the context, using below command
```
kubectl config use-context my-context
```

### Viewing Kubernetes API Object

- High level details
  ```
  k get pod nginx-pod
  NAME        READY   STATUS    RESTARTS   AGE
  nginx-pod   1/1     Running   0          14m
 
  ```

- Some details about pods
  ```
  k get pods nginx-pod -o wide
  NAME        READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
  nginx-pod   1/1     Running   0          17m   172.17.0.6   minikube   <none>           <none>
  ```

- Extract the object details as json format
```
{
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
        "creationTimestamp": "2019-12-22T09:39:54Z",
        "labels": {
            "app": "nginx"
        },
        "name": "nginx-pod",
        "namespace": "default",
        "resourceVersion": "6013",
        "selfLink": "/api/v1/namespaces/default/pods/nginx-pod",
        "uid": "0292e557-249f-11ea-91f0-08002758a025"
    },
    "spec": {
        "containers": [
            {
                "image": "nginx",
                "imagePullPolicy": "Always",
                "name": "nginx-pod",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                    {
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                        "name": "default-token-j6cvd",
                        "readOnly": true
                    }
                ]
            }
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "nodeName": "minikube",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "serviceAccount": "default",
        "serviceAccountName": "default",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
            {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "tolerationSeconds": 300
            },
            {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "tolerationSeconds": 300
            }
        ],
        "volumes": [
            {
                "name": "default-token-j6cvd",
                "secret": {
                    "defaultMode": 420,
                    "secretName": "default-token-j6cvd"
                }
            }
        ]
    },
    "status": {
        "conditions": [
            {
                "lastProbeTime": null,
                "lastTransitionTime": "2019-12-22T09:39:54Z",
                "status": "True",
                "type": "Initialized"
            },
            {
                "lastProbeTime": null,
                "lastTransitionTime": "2019-12-22T09:40:06Z",
                "status": "True",
                "type": "Ready"
            },
            {
                "lastProbeTime": null,
                "lastTransitionTime": "2019-12-22T09:40:06Z",
                "status": "True",
                "type": "ContainersReady"
            },
            {
                "lastProbeTime": null,
                "lastTransitionTime": "2019-12-22T09:39:54Z",
                "status": "True",
                "type": "PodScheduled"
            }
        ],
        "containerStatuses": [
            {
                "containerID": "docker://f5561864ad9d243fa33dfc37b33537a3abc4ddfe71db63d81b871409d739d18b",
                "image": "nginx:latest",
                "imageID": "docker-pullable://nginx@sha256:50cf965a6e08ec5784009d0fccb380fc479826b6e0e65684d9879170a9df8566",
                "lastState": {},
                "name": "nginx-pod",
                "ready": true,
                "restartCount": 0,
                "state": {
                    "running": {
                        "startedAt": "2019-12-22T09:40:05Z"
                    }
                }
            }
        ],
        "hostIP": "10.0.2.15",
        "phase": "Running",
        "podIP": "172.17.0.6",
        "qosClass": "BestEffort",
        "startTime": "2019-12-22T09:39:54Z"
    }
}
```

- Extract the object details as yaml format
```
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2019-12-22T09:39:54Z"
  labels:
    app: nginx
  name: nginx-pod
  namespace: default
  resourceVersion: "6013"
  selfLink: /api/v1/namespaces/default/pods/nginx-pod
  uid: 0292e557-249f-11ea-91f0-08002758a025
spec:
  containers:
  - image: nginx
    imagePullPolicy: Always
    name: nginx-pod
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-j6cvd
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-j6cvd
    secret:
      defaultMode: 420
      secretName: default-token-j6cvd
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2019-12-22T09:39:54Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2019-12-22T09:40:06Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2019-12-22T09:40:06Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2019-12-22T09:39:54Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://f5561864ad9d243fa33dfc37b33537a3abc4ddfe71db63d81b871409d739d18b
    image: nginx:latest
    imageID: docker-pullable://nginx@sha256:50cf965a6e08ec5784009d0fccb380fc479826b6e0e65684d9879170a9df8566
    lastState: {}
    name: nginx-pod
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: "2019-12-22T09:40:05Z"
  hostIP: 10.0.2.15
  phase: Running
  podIP: 172.17.0.6
  qosClass: BestEffort
  startTime: "2019-12-22T09:39:54Z"
```

- Use ```kubectl describe``` command
```
k describe pod nginx-pod
Name:               nginx-pod
Namespace:          default
Priority:           0
PriorityClassName:  <none>
Node:               minikube/10.0.2.15
Start Time:         Sun, 22 Dec 2019 10:39:54 +0100
Labels:             app=nginx
Annotations:        <none>
Status:             Running
IP:                 172.17.0.6
Containers:
  nginx-pod:
    Container ID:   docker://f5561864ad9d243fa33dfc37b33537a3abc4ddfe71db63d81b871409d739d18b
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:50cf965a6e08ec5784009d0fccb380fc479826b6e0e65684d9879170a9df8566
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 22 Dec 2019 10:40:05 +0100
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-j6cvd (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-j6cvd:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-j6cvd
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  26m   default-scheduler  Successfully assigned default/nginx-pod to minikube
  Normal  Pulling    26m   kubelet, minikube  Pulling image "nginx"
  Normal  Pulled     26m   kubelet, minikube  Successfully pulled image "nginx"
  Normal  Created    26m   kubelet, minikube  Created container nginx-pod
  Normal  Started    26m   kubelet, minikube  Started container nginx-pod
```

### Command Autocompletion


